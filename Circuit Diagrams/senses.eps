%!PS-Adobe-3.0 EPSF-3.0
%%Title: C:/Users/debji/Downloads/senses.eps
%%Creator: XCircuit v3.4 rev10
%%CreationDate: Thu Feb 17 13:46:40 2022
%%Pages: 1
%%BoundingBox: 68 68 436 848
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/nmos {
begingate
1 1.00 0 -64 0 -28 -32 -28 -32 28 0 28 0 64 6 polygon
1 1.00 -44 -28 -44 28 2 polygon
1 1.00 -44 0 -64 0 2 polygon
1.000 0.000 0.000 scb
(G) {/Times-Roman cf} 2 7 0 1.00 -64 0 pinlabel
(S) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
(D) {/Times-Roman cf} 2 9 0 1.00 0 64 pinlabel
0.180 0.545 0.341 scb
(spice:M%i %pD %pG %pS GND nmos) {/Times-Roman cf} 2 4 0 1.00 -244 -139 
infolabel
(sim:n %pG %pS %pD) {/Times-Roman cf} 2 4 0 1.00 -244 -187 infolabel
endgate
} def

/pmos {
begingate
1 1.00 -44 -28 -44 28 2 polygon
1 1.00 -60 0 -64 0 2 polygon
1 1.00 0 -64 0 -28 -32 -28 -32 28 0 28 0 64 6 polygon
1 1.00 -52 0 8 0.00 360.00 xcarc
1.000 0.000 0.000 scb
(S) {/Times-Roman cf} 2 9 0 1.00 0 64 pinlabel
(D) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
(G) {/Times-Roman cf} 2 7 0 1.00 -64 0 pinlabel
0.180 0.545 0.341 scb
(spice:M%i %pD %pG %pS Vdd pmos) {/Times-Roman cf} 2 4 0 1.00 -196 -139 
infolabel
(sim:p %pG %pS %pD) {/Times-Roman cf} 2 4 0 1.00 -196 -187 infolabel
endgate
} def

/invert {
% trivial
begingate
0 1.00 -32 -40 -32 40 40 0 3 polygon
1 1.00 48 0 8 0.00 360.00 xcarc
1 1.00 -32 0 -48 0 2 polygon
1 1.00 56 0 64 0 2 polygon
1.000 0.000 0.000 scb
(Out) {/Times-Roman cf} 2 4 0 1.00 64 0 pinlabel
(In) {/Times-Roman cf} 2 7 0 1.00 -48 0 pinlabel
endgate
} def

/polarized {
begingate
1 1.00 0 -64 0 -6 2 polygon
1 1.00 0 64 0 6 2 polygon
1 1.00 -32 6 32 6 2 polygon
1 1.00 0 -80 74 66.00 114.00 xcarc
1.000 0.000 0.000 scb
(t) {/Times-Roman cf} 2 9 0 1.00 0 64 pinlabel
(b) {/Times-Roman cf} 2 13 0 1.00 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:C%i %pt %pb 1.0P) {/Times-Roman cf} 2 0 0 1.00 -208 -160 infolabel
(sim:e %pt %pb %pb) {/Times-Roman cf} 2 0 0 1.00 -208 -208 infolabel
endgate
} def

/gnd {
% trivial
begingate
1 1.00 0 0 0 -32 2 polygon
1 1.00 -32 -32 32 -32 2 polygon
1 1.00 -18 -46 18 -46 2 polygon
1 1.00 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0 1.00 0 0 pinglobal
endgate
} def

/vdd {
% trivial
begingate
1 1.00 0 0 0 32 2 polygon
1 1.00 -32 32 32 32 2 polygon
(Vdd) {/Times-Roman cf} 2 17 0 0.90 0 38 label
0.933 0.604 0.000 scb
(Vdd) {/Times-Roman cf} 2 13 0 1.00 0 0 pinglobal
endgate
} def


%%EndSetup

%%Page: senses 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 831 1583 translate

1.00 0 0 64 nmos
1.00 180 -256 64 nmos
1.00 0 0 224 pmos
1.00 180 -256 224 pmos
1 1.00 -64 224 -96 224 -96 64 -64 64 4 polygon
1 1.00 -192 224 -160 224 -160 64 -192 64 4 polygon
1 1.00 -256 160 -256 128 2 polygon
1 1.00 0 160 0 128 2 polygon
1 1.00 -256 128 -320 128 -336 128 3 polygon
1 1.00 0 128 80 128 2 polygon
1 1.00 -256 288 0 288 2 polygon
1 1.00 -128 288 -128 320 2 polygon
1 1.00 -256 0 0 0 2 polygon
1 1.00 -256 144 -96 144 2 polygon
1 1.00 -160 128 0 128 2 polygon
1.00 90 -400 128 nmos
1.00 90 144 128 nmos
1 1.00 -400 192 -400 368 144 368 144 192 4 polygon
1 1.00 -400 368 -432 368 2 polygon
1 1.00 -464 128 -464 416 2 polygon
1 1.00 -464 416 -256 416 -256 464 3 polygon
1 1.00 0 464 0 416 192 416 208 416 208 128 5 polygon
1.00 0 0 528 pmos
1.00 90 -128 416 pmos
1 1.00 -192 416 -272 416 2 polygon
1 1.00 -64 416 0 416 2 polygon
1.00 180 -256 528 pmos
1 1.00 -128 528 -64 528 2 polygon
1 1.00 -128 528 -128 480 2 polygon
1 1.00 -128 528 -192 528 2 polygon
1 1.00 -256 592 0 592 2 polygon
1 1.00 -128 592 -128 624 2 polygon
1 1.00 -128 528 -128 560 2 polygon
1.00 180 -256 -576 nmos
1.00 90 -128 -304 pmos
1.00 0 0 -448 pmos
1.00 180 -256 -448 pmos
1 1.00 -256 -384 0 -384 2 polygon
1 1.00 -128 -384 -128 -368 2 polygon
1 1.00 -256 -640 0 -640 0 -624 3 polygon
1.00 0 0 -576 nmos
1 1.00 -192 -448 -160 -448 -160 -576 -192 -576 4 polygon
1 1.00 -64 -448 -96 -448 -96 -576 -64 -576 4 polygon
1 1.00 -256 -528 -96 -528 2 polygon
1 1.00 -160 -496 0 -496 0 -512 3 polygon
1 1.00 -464 -512 -464 128 2 polygon
1 1.00 208 -512 208 128 2 polygon
1.00 0 -128 -704 nmos
1.00 90 -400 -512 pmos
1.00 90 144 -512 pmos
1 1.00 -336 -512 -256 -512 2 polygon
1 1.00 80 -512 0 -512 2 polygon
1 1.00 -256 -304 -288 -304 -288 -512 3 polygon
1 1.00 0 -304 32 -304 32 -512 3 polygon
1 1.00 -336 -512 -336 -832 2 polygon
1 1.00 80 -512 80 -832 2 polygon
1.00 90 -336 -864 invert
1.00 90 80 -864 invert
1.00 90 -336 -976 invert
1.00 90 -336 -1120 pmos
1.00 90 80 -1120 nmos
1 1.00 -336 -1040 -336 -1056 2 polygon
1 1.00 80 -928 80 -1056 2 polygon
1 1.00 -272 -1120 16 -1120 2 polygon
1 1.00 -240 -1120 -240 -1200 -160 -1200 3 polygon
1.00 0 -112 -1200 invert
1.00 180 -96 -1344 invert
1 1.00 -48 -1200 16 -1200 16 -1344 -48 -1344 4 polygon
1 1.00 -160 -1344 -240 -1344 -240 -1200 3 polygon
1 1.00 -240 -1264 -288 -1264 2 polygon
1.00 0 288 -64 polarized
1.00 0 -560 -64 polarized
1 1.00 -560 0 -464 0 2 polygon
1 1.00 288 0 208 0 2 polygon
1.00 0 -560 -128 gnd
1.00 0 288 -128 gnd
1 1.00 -400 -448 -400 -416 2 polygon
1 1.00 144 -448 144 -416 2 polygon
1.00 0 -128 -752 gnd
1.00 0 -16 -224 pmos
1.00 180 -240 -224 pmos
1.00 0 -128 -160 vdd
1 1.00 -256 -304 -192 -304 -240 -304 3 polygon
1 1.00 -240 -304 -240 -288 -240 -272 3 polygon
1 1.00 -64 -304 0 -304 -16 -304 -16 -288 4 polygon
1 1.00 -240 -160 -16 -160 2 polygon
1 1.00 -176 -224 -80 -224 2 polygon
1 1.00 -128 -240 -128 -208 2 polygon
1.00 0 -128 0 gnd
1.00 0 -128 288 vdd
1.00 0 -128 592 vdd
1.00 0 -448 -1120 vdd
1.00 0 192 -1120 gnd
1 1.00 -448 -1120 -400 -1120 2 polygon
1 1.00 144 -1120 192 -1120 2 polygon
(WL) {/Helvetica cf} 2 16 0 0.50 -432 384 label
(Q) {/Helvetica cf} 2 16 0 0.50 -320 144 label
(QB) {/Helvetica cf} 2 16 0 0.50 32 144 label
(CL) {/Helvetica cf} 2 16 0 0.50 -528 -112 label
(CL) {/Helvetica cf} 2 16 0 0.50 240 -112 label
(PCH) {/Helvetica cf} 2 16 0 0.50 -144 -192 label
(SEN) {/Helvetica cf} 2 16 0 0.50 -416 -400 label
1.00 0 -128 -384 vdd
(SEN) {/Helvetica cf} 2 16 0 0.50 -256 -704 label
(SEN) {/Helvetica cf} 2 16 0 0.50 128 -400 label
(BPCH) {/Helvetica cf} 2 16 0 0.50 -160 560 label
(SAF) {/Helvetica cf} 2 16 0 0.50 -352 -496 label
(SAT) {/Helvetica cf} 2 16 0 0.50 64 -496 label
(BL) {/Helvetica cf} 2 16 0 0.50 -512 304 label
(BLB) {/Helvetica cf} 2 16 0 0.50 240 304 label
4 1.00 -336 624 -336 400 80 400 80 624 4 polygon
4 1.00 -560 320 -560 -16 320 -16 320 320 4 polygon
4 1.00 -256 -112 -256 -320 0 -320 0 -112 4 polygon
4 1.00 -496 -368 -496 -768 240 -768 240 -368 4 polygon
4 1.00 -496 -800 -496 -1392 240 -1392 240 -800 4 polygon
(Bitline Precharge Circuit) {/Helvetica cf} 2 16 0 0.50 -448 656 label
(SRAM Cell) {/Helvetica cf} 2 16 0 0.50 -640 352 label
(Internal Nodes) {/Helvetica cf} 2 16 0 0.50 -432 -80 label
(Precharge Circuit) {/Helvetica cf} 2 16 0 0.50 -448 -112 label
(Sense) {/Helvetica cf} 2 16 0 0.50 -608 -416 label
(Amplifier) {/Helvetica cf} 2 16 0 0.50 -608 -448 label
(Latching) {/Helvetica cf} 2 16 0 0.50 -608 -864 label
(Circuit) {/Helvetica cf} 2 16 0 0.50 -608 -896 label
(Qout) {/Helvetica cf} 2 16 0 0.50 -336 -1264 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
